<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:controls="cn.superion.base.components.controls.*"
			   width="400"
			   height="220"
			   backgroundColor="0xE2E8E8"
			   close="PopUpManager.removePopUp(this)"
 title="病人用包查询">
	<fx:Script>
		<![CDATA[
			import cn.superion.base.components.controls.TextInputIcon;
			import cn.superion.base.config.ParameterObject;
			import cn.superion.base.util.RemoteUtil;
			import cn.superion.materialDept.util.MaterialDictShower;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.remoting.RemoteObject;
			public var data:Object={};
			public var destination:String="deptPatsFeeImpl";
			[Bindable]
			private var currentStatusArray:ArrayCollection=new ArrayCollection([{currentStatus: '1', currentStatusName: '登记'}, {currentStatus: '2', currentStatusName: '审核'}]);
			
			protected function btQuery_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub	
				var parameter:Object={};
				var para:ParameterObject=new ParameterObject();
				parameter["inpNo"]=inpNo.text == "" ? null : inpNo.text;
				if (isRegistere.selected == true)
				{
					parameter["beginRegistere"]=beginRegistere.selectedDate;
					data.parentWin.zParameter["beginRegistere"]=beginRegistere.selectedDate;
					parameter["endRegistere"]=MaterialDictShower.addOneDay(endRegistere.selectedDate);
					data.parentWin.zParameter["endRegistere"]=MaterialDictShower.addOneDay(endRegistere.selectedDate);
				}
				parameter["registerStatus"]=registerStatus.selectedItem.currentStatus;
				data.parentWin.zParameter["registerStatus"]=registerStatus.selectedItem.currentStatus;
				para.conditions=parameter;
				var ro:RemoteObject=RemoteUtil.getRemoteObject("cssdDeliverImpl", function(rev:Object):void
				{
					if(rev.data.length<=0)
					{
						Alert.show("没有对应的数据！", "提示");
						data.parentWin.clearForm(true, true);
						return;
					}
					data.parentWin.arrayAutoId=rev.data;
					data.parentWin.findRdsById(rev.data[0]);
					setToolBarPageBts(rev.data.length)
					btReturn_clickHandler();
				});
				ro.findStockMasterStatu(para);
			}

			/**
			 * 设置当前按钮是否显示
			 */
			private function setToolBarPageBts(flenth:int):void
			{
				data.parentWin.toolBar.queryToPreState()
				
				if (flenth < 2)
				{
					data.parentWin.toolBar.btFirstPage.enabled=false
					data.parentWin.toolBar.btPrePage.enabled=false
					data.parentWin.toolBar.btNextPage.enabled=false
					data.parentWin.toolBar.btLastPage.enabled=false
					return;
				}
				data.parentWin.toolBar.btFirstPage.enabled=false
				data.parentWin.toolBar.btPrePage.enabled=false
				data.parentWin.toolBar.btNextPage.enabled=true
				data.parentWin.toolBar.btLastPage.enabled=true
			}
			protected function textinput1_keyUpHandler(e:KeyboardEvent, fcontrolNext:*):void
			{
				// TODO Auto-generated method stub
				//按回车跳转
				if (e.keyCode == Keyboard.ENTER)
				{
					if (fcontrolNext is TextInputIcon && !(e.currentTarget is TextInputIcon))
					{
						fcontrolNext.txtContent.setFocus()
						return;
					}
					if (e.currentTarget is TextInputIcon)
					{
						if (fcontrolNext is TextInputIcon)
						{
							fcontrolNext.txtContent.setFocus()
							return;
						}
					}
					if (fcontrolNext.className == "DateField")
					{
						fcontrolNext.open();
						fcontrolNext.setFocus()
						return;
					}
					if (fcontrolNext is DropDownList)
					{
						fcontrolNext.openDropDown();
						fcontrolNext.setFocus();
						return;
					}
					fcontrolNext.setFocus()
				}
			}
			
			//关闭窗口
			protected function btReturn_clickHandler():void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingLeft="10"
						  paddingRight="10"
						  paddingTop="10"
						  paddingBottom="10"/>
	</s:layout>
	<mx:TabNavigator width="100%"
					 height="100%"
					 paddingBottom="10"
					 paddingTop="10"
					 paddingLeft="10"
					 paddingRight="10"
					 backgroundColor="0xE2E8E8">
		<s:NavigatorContent width="100%"
							height="100%"
							label="查询条件">
			<s:VGroup width="100%"
					  verticalAlign="middle"
					  height="100%">
				
				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:Label text="住 院 号:"/>
					<s:TextInput id="inpNo"
								 width="100%"
								 keyUp="textinput1_keyUpHandler(event,isRegistere)"/>
				</s:HGroup>
				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:CheckBox id="isRegistere"
								label="登记日期"
								selected="false"
								keyUp="textinput1_keyUpHandler(event,beginRegistere)"/>
					<mx:DateField id="beginRegistere"
								  width="100%"
								  formatString="YYYY-MM-DD"
								  enabled="{isRegistere.selected}"
								  enterFrame="{beginRegistere.selectedDate==null?beginRegistere.selectedDate=new Date():beginRegistere.selectedDate}"
								  selectableRange="{{rangeEnd:endRegistere.selectedDate}}"
								  keyUp="textinput1_keyUpHandler(event,endRegistere)"/>
					<s:Label text="-"/>
					<mx:DateField id="endRegistere"
								  width="100%"
								  formatString="YYYY-MM-DD"
								  enabled="{isRegistere.selected}"
								  enterFrame="{endRegistere.selectedDate==null?endRegistere.selectedDate=new Date():endRegistere.selectedDate}"
								  selectableRange="{{rangeStart:beginRegistere.selectedDate}}"
								  keyUp="textinput1_keyUpHandler(event,registerStatus)"/>
				</s:HGroup>
				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:Label text="当前状态:"/>
					<s:DropDownList id="registerStatus"
									width="100%"
									height="25"
									selectedIndex="0"
									labelField="currentStatusName"
									dataProvider="{currentStatusArray}"
									keyUp="textinput1_keyUpHandler(event,btQuery)"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:HGroup width="100%"
			  height="29"
			  horizontalAlign="right"
			  verticalAlign="middle"
			  gap="5">
		<mx:LinkButton id="btQuery"
					   height="26"
					   label=" 确 定"
					   skin="mx.skins.halo.ButtonSkin"
					   icon="@Embed(source='/assets/images/button/confirm20.png')"
					   click="btQuery_clickHandler(event)"/>
		<mx:LinkButton id="btReturn"
					   height="26"
					   label=" 取消"
					   skin="mx.skins.halo.ButtonSkin"
					   icon="@Embed(source='/assets/images/button/return20.png')"
					   click="btReturn_clickHandler()"/>
	</s:HGroup>
</s:TitleWindow>
